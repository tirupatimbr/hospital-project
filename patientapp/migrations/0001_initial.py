# Generated by Django 2.2 on 2021-05-11 09:41

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=128, null=True)),
                ('last_name', models.CharField(blank=True, max_length=128, null=True)),
                ('patient_id', models.BigIntegerField(blank=True, null=True, unique=True)),
                ('address_1', models.CharField(blank=True, max_length=256, null=True)),
                ('address_2', models.CharField(blank=True, max_length=256, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=128, null=True)),
                ('city', models.CharField(blank=True, max_length=128, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pharmacy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pharmacy_name', models.CharField(blank=True, max_length=256, null=True)),
                ('email', models.EmailField(blank=True, max_length=256, null=True)),
                ('phone', models.CharField(blank=True, max_length=128, null=True)),
                ('address_1', models.CharField(blank=True, max_length=256, null=True)),
                ('address_2', models.CharField(blank=True, max_length=256, null=True)),
                ('city', models.CharField(blank=True, max_length=128, null=True)),
                ('state', models.CharField(blank=True, max_length=128, null=True)),
                ('country', models.CharField(blank=True, max_length=128, null=True)),
                ('fax', models.CharField(blank=True, max_length=128, null=True)),
                ('pharmacy_id', models.CharField(blank=True, max_length=128, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SecondaryMedicalInsurance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy_holder_name', models.CharField(blank=True, max_length=256, null=True)),
                ('policy', models.CharField(blank=True, max_length=256, null=True)),
                ('insurance_name', models.CharField(blank=True, max_length=256, null=True)),
                ('insurance_phone', models.CharField(blank=True, max_length=256, null=True)),
                ('group', models.CharField(blank=True, max_length=256, null=True)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patientapp.Patient')),
            ],
        ),
        migrations.CreateModel(
            name='SecondaryInsurance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insurance_name', models.CharField(blank=True, max_length=256, null=True)),
                ('relation_to_patient', models.CharField(blank=True, max_length=128, null=True)),
                ('policy_holder_name', models.CharField(blank=True, max_length=256, null=True)),
                ('insurance_phone', models.CharField(blank=True, max_length=256, null=True)),
                ('policy', models.CharField(blank=True, max_length=256, null=True)),
                ('group', models.CharField(blank=True, max_length=256, null=True)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='secondary', to='patientapp.Patient')),
            ],
        ),
        migrations.CreateModel(
            name='PrimaryInsurance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insurance_name', models.CharField(blank=True, max_length=256, null=True)),
                ('relation_to_patient', models.CharField(blank=True, max_length=128, null=True)),
                ('policy_holder_name', models.CharField(blank=True, max_length=256, null=True)),
                ('insurance_phone', models.CharField(blank=True, max_length=256, null=True)),
                ('policy', models.CharField(blank=True, max_length=256, null=True)),
                ('group', models.CharField(blank=True, max_length=256, null=True)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='primary', to='patientapp.Patient')),
            ],
        ),
        migrations.CreateModel(
            name='PatientPrescriber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('req_fields', models.BooleanField(default=False)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patientapp.Patient')),
            ],
        ),
        migrations.CreateModel(
            name='PatientDiagnosis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patientapp.Patient')),
            ],
        ),
        migrations.CreateModel(
            name='PatientAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=256, null=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='attachments')),
                ('note', models.TextField(blank=True, null=True)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patientapp.Patient')),
            ],
        ),
        migrations.AddField(
            model_name='patient',
            name='pharmacy',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='patientapp.Pharmacy'),
        ),
        migrations.CreateModel(
            name='OrderInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_written', models.DateField(blank=True, null=True)),
                ('date_received', models.DateField(blank=True, null=True)),
                ('need_by', models.DateField(blank=True, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('days', models.IntegerField(blank=True, null=True)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patientapp.Patient')),
            ],
        ),
        migrations.CreateModel(
            name='MedicalInsurance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy_holder_name', models.CharField(blank=True, max_length=256, null=True)),
                ('policy', models.CharField(blank=True, max_length=256, null=True)),
                ('insurance_name', models.CharField(blank=True, max_length=256, null=True)),
                ('insurance_phone', models.CharField(blank=True, max_length=256, null=True)),
                ('group', models.CharField(blank=True, max_length=256, null=True)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patientapp.Patient')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_no', models.CharField(blank=True, max_length=64, null=True)),
                ('user_type', models.CharField(blank=True, max_length=64, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
